{"version":3,"sources":["components/Square.jsx","localStorageUtil.js","assets/sounds/step.mp3","components/Board.jsx","components/Menu.jsx","components/Settings.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","getData","key","JSON","parse","localStorage","getItem","Board","state","save","squares","Array","fill","xIsNext","mode","disableBoard","audio","Audio","lines","i","length","a","b","c","this","slice","calculateWinner","playAudio","setState","sound","play","handleClickPVP","handleClickPVSPC","data","setItem","stringify","computerStep","arrEmpty","forEach","el","index","push","setTimeout","Math","floor","random","status","winner","type","name","defaultChecked","onChange","e","changeMode","target","renderSquare","resetGame","changeLink","saveGame","React","Component","Menu","Settings","toggleSound","Game","link","continue","bind","console","log","renderSwitch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a156df22.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square (props){\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\nexport default Square;","function getData(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nfunction setData(key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nexport { getData, setData };","export default __webpack_public_path__ + \"static/media/step.4eab55ed.mp3\";","import React from 'react';\r\nimport Square from './Square';\r\nimport { setData } from './../localStorageUtil';\r\nimport audio from '../assets/sounds/step.mp3';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = props.save || {\r\n      squares: Array(9).fill(null),\r\n      xIsNext:true,\r\n      mode:'pvp',\r\n    }\r\n    this.disableBoard = false;\r\n    this.audio = new Audio(audio);\r\n  }\r\n\r\n  calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleClickPVP(i) {\r\n    const squares = this.state.squares.slice();\r\n    if (this.calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X':'O';\r\n    this.playAudio();\r\n    this.setState({\r\n      squares:squares,\r\n      xIsNext:!this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  playAudio() {\r\n    if(this.props.sound) {\r\n      this.audio.play();\r\n    }\r\n  }\r\n\r\n  handleClickPVSPC(i) {\r\n    const squares = this.state.squares.slice();\r\n   \r\n    if (this.calculateWinner(squares) || squares[i] || this.disableBoard) {\r\n      return;\r\n    }\r\n    squares[i] = 'X';\r\n   \r\n    this.disableBoard = true;\r\n   \r\n    this.playAudio();\r\n    this.setState({\r\n      squares:squares,\r\n      xIsNext:!this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.state.squares[i]}\r\n        onClick={()=>{\r\n          if(this.state.mode === 'pvp') {\r\n            this.handleClickPVP(i);\r\n          }\r\n          else {\r\n            this.handleClickPVSPC(i);\r\n          }\r\n        }}/>\r\n      );\r\n  }\r\n\r\n  changeMode(value) {\r\n    this.setState({\r\n      squares: Array(9).fill(null),\r\n      mode:value,\r\n      xIsNext:true,\r\n    });\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState({\r\n      squares: Array(9).fill(null),\r\n      xIsNext:true,\r\n    });\r\n  }\r\n\r\n  saveGame() {\r\n    setData('saveGame',this.state);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(!this.state.xIsNext && !this.calculateWinner(this.state.squares) && this.state.mode === 'pvspc') {\r\n      this.computerStep();\r\n    }\r\n  }\r\n\r\n  computerStep() {\r\n    const arrEmpty = [];\r\n    const squares = this.state.squares.slice();\r\n\r\n    squares.forEach((el,index)=>{\r\n      if(!el) {\r\n        arrEmpty.push(index);\r\n      }\r\n    \r\n    });\r\n\r\n    setTimeout(()=>{\r\n      squares[arrEmpty[Math.floor(Math.random() * arrEmpty.length)]] = 'O';\r\n      this.audio.play();\r\n      this.setState({\r\n        squares:squares,\r\n        xIsNext:!this.state.xIsNext,\r\n      });\r\n      this.disableBoard = false;\r\n    }\r\n    ,1000);\r\n  }\r\n\r\n  render() {\r\n    const winner = this.calculateWinner(this.state.squares);\r\n    let status;\r\n    if(winner) {\r\n      status = `Выиграл ${winner}`\r\n    }\r\n    else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X':'O'}`;\r\n    }\r\n   \r\n    return (\r\n      <div>\r\n        <div className='choose-mode'>\r\n          <label className='choose-mode-item'>\r\n            <input type=\"radio\" name='mode' value='pvp' defaultChecked={this.state.mode === 'pvp' ? true : false} onChange={(e)=>this.changeMode(e.target.value)}/>\r\n            Player VS Player\r\n          </label>\r\n          <label className='choose-mode-item'>\r\n            <input type=\"radio\" name='mode' value='pvspc' defaultChecked={this.state.mode === 'pvp' ? false : true} onChange={(e)=>this.changeMode(e.target.value)}/>\r\n           Player VS PC\r\n          </label>\r\n        </div>\r\n        <div className=\"status\">{status}</div>\r\n      <div className=\"board-wrap\">\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n          <div className={winner ? \"board-result board-result--visible\":\"board-result\"}>\r\n            {status}\r\n            <button className=\"board-result-btn\" onClick={()=>this.resetGame()}>New Game</button>\r\n          </div>\r\n          </div>\r\n       <div className='buttons-block'>\r\n          <button className='button' onClick={()=>this.props.changeLink('menu')}>Menu</button>\r\n          <button className='button' onClick={()=>this.saveGame()}>Save Game</button>\r\n          <button className='button' onClick={()=>this.resetGame()}>Reset</button>\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport { getData } from './../localStorageUtil';\r\n\r\nfunction Menu (props){\r\n    return (\r\n      <ul className='menu'>\r\n        <li className='menu-item' onClick={()=>props.changeLink('newGame')}>\r\n          New Game\r\n        </li>\r\n        <li className={getData('saveGame') ? 'menu-item': 'menu-item menu-item--disabled'} onClick={()=>props.changeLink('continue')}>\r\n          Continue\r\n        </li>\r\n        <li className='menu-item' onClick={()=>props.changeLink('settings')}> \r\n          Settings\r\n        </li>\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\n\r\nfunction Settings (props){\r\n    return (\r\n      <div>\r\n      <h1>Settings</h1>\r\n      <ul>\r\n        <li>\r\n          <span>Sound:</span>\r\n          <div>\r\n            <label>\r\n              On\r\n              <input type=\"radio\" value='on' name='sound' onChange={props.toggleSound} defaultChecked={props.sound ? true : false}/>\r\n            </label>\r\n            <label>\r\n              Off\r\n              <input type=\"radio\" value='off' name='sound' onChange={props.toggleSound} defaultChecked={props.sound ? false : true}/>\r\n            </label>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button onClick={()=>props.changeLink('menu')}>Menu</button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport Board from './Board';\r\nimport Menu from './Menu';\r\nimport Settings from './Settings';\r\nimport { getData } from './../localStorageUtil';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      link: 'menu',\r\n      continue:false,\r\n      sound:true\r\n    }\r\n    this.changeLink = this.changeLink.bind(this);\r\n    this.toggleSound = this.toggleSound.bind(this);\r\n}\r\n\r\nchangeLink = (link)=>{\r\n  this.setState({link:link});\r\n}\r\n\r\ntoggleSound = ()=>{\r\n  this.setState((state)=>({sound:!state.sound}));\r\n}\r\n\r\nrenderSwitch(link) {\r\n  switch(link) {\r\n    case 'newGame':\r\n      return <Board changeLink={this.changeLink} sound={this.state.sound}/>;\r\n    case 'continue':\r\n      return <Board changeLink={this.changeLink} save={getData('saveGame')} sound={this.state.sound}/>;\r\n    case 'settings':\r\n      return <Settings changeLink={this.changeLink} toggleSound={this.toggleSound} sound={this.state.sound}/>;\r\n    case 'menu':\r\n      return <Menu changeLink={this.changeLink}/>;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n  render() {\r\n    console.log(this.state.sound);\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          {this.renderSwitch(this.state.link)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n   <Game/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}